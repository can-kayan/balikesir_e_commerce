const mongoose=require('mongoose');
const autopopulate=require('mongoose-autopopulate');
const nanoid = require('../../securityMiddleware/nanoid');
mongoose.plugin(autopopulate);
const ProductSchema=mongoose.Schema({
    infolog:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'Infolog',
        required:true
    },
    name:{
        type:String,
        required:true
    },
    description:{
        type:String,
        required:true
    },
    image:{
        type:[String],
        required:true
    },
    variantAttributes:[{
        name:{
            type:String,
            required:false
        },
        value:{
            type:String,
            required:false
        }
    }],
    category:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'Category',
        required:true,
        autopopulate:true
    },
    mainCategory:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'MainCategory',
        required:true,
        autopopulate:true
    },
    brand:{
        type:String
    },
    price:{
        type:Number,
        required:true
    },
    stock:{
        type:Number,
        required:true,
        default:1  
    },
    currency:{
        type:String,
        default:'TRY',
        enum:['TRY','USD','EUR']
    },
    itemType:{
        type:String,
        default:'PHYSICAL',
        enum:['PHYSICAL','VIRTUAL']
    }
},{
    _id:true,
    timestamps:true,
    toJSON:{
        transform:(doc,ret)=>{
            delete ret.__v;
            delete ret.password;
            return{
                ...ret
            }
        }
    }
 })
exports.Product=mongoose.model('Product',ProductSchema);